// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// User model
model User {
  id         Int               @id @default(autoincrement())
  email      String            @unique
  password   String
  name       String?
  firstname  String?
  lastname   String?
  phone      String?
  phoneAlt   String?           @map("phone_alt") // เบอร์โทรสำรอง
  lineId     String?           @map("line_id")
  wechatId   String?           @map("wechat_id")
  whatsapp   String?
  facebook   String?
  instagram  String?
  picture    String?
  role       Role              @default(USER)
  createdAt  DateTime          @default(now()) @map("created_at")
  updatedAt  DateTime          @updatedAt @map("updated_at")
  properties Property[]
  listings   PropertyListing[]
  blogs      Blog[]

  @@map("users")
}

enum Role {
  ADMIN
  USER
  AGENT
}

// Zone model - สำหรับโซน/ย่านต่างๆ
model Zone {
  id          Int      @id @default(autoincrement())
  name        String   @unique // ชื่อโซน เช่น Jomtien, Pratumnak
  nameEn      String   @map("name_en") // ชื่อภาษาอังกฤษ
  nameTh      String?  @map("name_th") // ชื่อภาษาไทย
  nameCh      String?  @map("name_ch") // ชื่อภาษาจีน
  nameRu      String?  @map("name_ru") // ชื่อภาษารัสเซีย
  description String?  @db.Text // คำอธิบาย
  z_image     String?  @map("z_image") // URL รูปภาพโซน
  city        String? // เมือง เช่น Pattaya
  province    String // จังหวัด เช่น Chonburi
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  // ความสัมพันธ์กับ Property
  properties Property[]

  @@map("zones")
}

model TypeProperty {
  id          Int      @id @default(autoincrement())
  name        String   @unique // ชื่อประเภท
  nameEn      String   @map("name_en") // ชื่อภาษาอังกฤษ
  nameTh      String?  @map("name_th") // ชื่อภาษาไทย
  nameCh      String?  @map("name_ch") // ชื่อภาษาจีน
  nameRu      String?  @map("name_ru") // ชื่อภาษารัสเซีย
  p_image     String?  @map("z_image") // URL รูปภาพ
  description String?  @db.Text // คําอธิบาย
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  properties Property[]

  @@map("property_types")
}


// Property model - หลักการคือ Property เป็นข้อมูลหลักของอสังหาริมทรัพย์
model Property {
  id            Int          @id @default(autoincrement())
  title         String // ชื่อประกาศ (propertyTitle จาก formData)
  projectName   String       @map("project_name") // ชื่อโครงการ
  propertyCode  String?      @unique @map("property_code") // รหัสทรัพย์ (auto generate)
  referenceId   String?      @map("reference_id") // รหัสอ้างอิง
  propertyTypeId Int         @map("property_type_id")
  address       String       @db.Text // ที่อยู่
  searchAddress String?      @map("search_address") @db.Text // ที่อยู่สำหรับค้นหา
  district      String // เขต/อำเภอ
  subdistrict   String       @map("subdistrict") // แขวง/ตำบล
  province      String // จังหวัด
  city          String? // เมือง
  country       String       @default("Thailand")
  zipCode       String       @map("zip_code") // รหัสไปรษณีย์
  latitude      Float?       @map("lat") // พิกัด Latitude
  longitude     Float?       @map("lng") // พิกัด Longitude

  // ความสัมพันธ์กับ Zone
  zoneId Int?  @map("zone_id")
  
  propertyType  TypeProperty @relation(fields: [propertyTypeId], references: [id])
  zone   Zone? @relation(fields: [zoneId], references: [id])

  // ข้อมูลพื้นที่ - สำหรับทุกประเภททรัพย์สิน
  area       Float // พื้นที่ (ตร.ม.)
  usableArea Float? @map("usable_area") // พื้นที่ใช้สอย (ตร.ม.)

  // ข้อมูลที่ดิน - สำหรับที่ดิน (LAND)
  landSizeRai    Float?         @map("land_size_rai") // ขนาดที่ดิน (ไร่)
  landSizeNgan   Float?         @map("land_size_ngan") // ขนาดที่ดิน (งาน)
  landSizeSqWah  Float?         @map("land_size_sq_wah") // ขนาดที่ดิน (ตารางวา)
  landWidth      Float?         @map("land_width") // ความกว้างของที่ดิน (เมตร)
  landLength     Float?         @map("land_length") // ความยาวของที่ดิน (เมตร)
  landShape      LandShape?     @map("land_shape") // รูปทรงที่ดิน
  landGrade      LandGrade?     @map("land_grade") // เกรดที่ดิน
  landAccess     LandAccess?    @map("land_access") // การเข้าถึงที่ดิน
  ownershipType  OwnershipType? @map("ownership_type") // ประเภทกรรมสิทธิ์์
  ownershipQuota String?        @map("ownership_quota") // สัดส่วนกรรมสิทธิ์

  // ข้อมูลบ้าน/คอนโด - สำหรับบ้านและคอนโด
  bedrooms         Int? // จำนวนห้องนอน
  bathrooms        Int? // จำนวนห้องน้ำ
  floors           Int? // จำนวนชั้น
  furnishing       FurnishingType? @default(UNFURNISHED) // เฟอร์นิเจอร์
  constructionYear Int?            @map("construction_year") // ปีที่สร้าง
  communityFee     Float?          @map("community_fee") // ค่าส่วนกลาง
  buildingUnit     String?         @map("building_unit") // อาคาร/ยูนิต (สำหรับคอนโด)
  floor            Int? // ชั้นที่ (สำหรับคอนโด)

  // ข้อมูลหลายภาษา
  description            String  @db.Text // คำอธิบายภาษาอังกฤษ
  translatedTitles       String? @db.LongText @map("translated_titles") // หัวข้อในหลายภาษา (JSON string format: {"th": "...", "zh": "...", "ru": "..."})
  translatedDescriptions String? @db.LongText @map("translated_descriptions") // คำอธิบายในหลายภาษา (JSON string format: {"th": "...", "zh": "...", "ru": "..."})
  paymentPlan            String? @map("payment_plan") @db.Text // แผนการชำระเงิน
  translatedPaymentPlans String? @db.LongText @map("translated_payment_plans") // แผนการชำระเงินในหลายภาษา

  // ข้อมูลติดต่อและโซเชียลมีเดีย
  socialMedia String? @db.LongText @map("social_media") // ข้อมูลโซเชียลมีเดีย (JSON string format: {"youtubeUrl": "...", "tiktokUrl": "..."})
  contactInfo String? @db.LongText @map("contact_info") // ข้อมูลติดต่อ (JSON string format: {"phone": "...", "email": "...", "lineId": "..."})

  // ข้อมูล Co-Agent Accept
  coAgentAccept     Boolean? @default(false) @map("co_agent_accept") // การยอมรับ Co-Agent
  commissionType    String?  @map("commission_type") // ประเภทค่าคอมมิชชั่น: 'percent' หรือ 'amount'
  commissionPercent String?  @map("commission_percent") // เปอร์เซ็นต์ค่าคอมมิชชั่น
  commissionAmount  String?  @map("commission_amount") // จำนวนเงินค่าคอมมิชชั่น
  privateNote       String?  @db.Text @map("private_note") // บันทึกส่วนตัว

  // ข้อมูลเพิ่มเติม
  status      String    @default("ACTIVE") // เปิด/ปิด ประกาศ
  isPublished Boolean   @default(true) @map("is_published") // เปิด/ปิด การแสดงประกาศ
  isFeatured  Boolean   @default(false) @map("is_featured") // แสดงในหน้าแรก (Popular/Random)
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  deletedAt   DateTime? @map("deleted_at") // วันที่ลบ (สำหรับ soft delete)
  userId      Int       @map("user_id") // ผู้สร้างข้อมูล
  user      User      @relation(fields: [userId], references: [id]) 

  // Relations
  images       PropertyImage[]
  features     PropertyFeature[]
  amenities    PropertyAmenity[]
  facilities   PropertyFacility[]
  views        PropertyView[]
  highlights   PropertyHighlight[]
  labels       PropertyLabel[]
  nearbyPlaces PropertyNearby[]
  listings     PropertyListing[]
  floorPlans   FloorPlan[] // แผนผังห้อง/ที่ดิน
  unitPlans    UnitPlan[] // แผนผังยูนิต
  contacts     Message[]

  @@map("properties")
}

// Message model - สำหรับการติดต่อจากผู้สนใจ
model Message {
  id         Int           @id @default(autoincrement())
  name       String
  email      String? // ปรับให้เป็น optional
  phone      String // ปรับให้เป็น required
  message    String        @db.Text
  propertyId Int           @map("property_id") // ปรับให้เป็น required
  property   Property      @relation(fields: [propertyId], references: [id]) // เพิ่ม relation กับ Property
  status     String?       @default("NEW")
  createdAt  DateTime      @default(now()) @map("created_at")
  updatedAt  DateTime      @updatedAt @map("updated_at")
  deletedAt  DateTime?     @map("deleted_at") // วันที่ลบข้อมูล (soft delete)

  @@map("messages")
}

// PropertyListing model - สำหรับการฝากขาย/เช่า (แยกออกจาก Property เพื่อให้ Property เดียวกันสามารถมีได้ทั้งประกาศขายและเช่า)
model PropertyListing {
  id               Int           @id @default(autoincrement())
  listingType      ListingType   @map("listing_type") // ประเภทการฝาก (ขาย/เช่า)
  status           ListingStatus @default(ACTIVE)
  price            Float // ราคา
  pricePerSqm      Float?        @map("price_per_sqm") // ราคาต่อตารางเมตร
  promotionalPrice Float?        @map("promotional_price") // ราคาโปรโมชั่น
  rentalPrice      Float?        @map("rental_price") // ราคาเช่ารายเดือน
  shortTerm3Months Float?        @map("short_term_3_months") // ราคาเช่า 3 เดือน
  shortTerm6Months Float?        @map("short_term_6_months") // ราคาเช่า 6 เดือน
  shortTerm1Year   Float?        @map("short_term_1_year") // ราคาเช่า 1 ปี
  currency         Currency      @default(THB)
  minimumStay      Int?          @map("minimum_stay") // ระยะเวลาขั้นต่ำในการเช่า (เดือน) - สำหรับเช่าเท่านั้น
  availableFrom    DateTime?     @map("available_from") // วันที่พร้อมเข้าอยู่
  privateNote      String?       @map("private_note") @db.Text // บันทึกส่วนตัว
  youtubeUrl       String?       @map("youtube_url") // URL วิดีโอ YouTube
  tiktokUrl        String?       @map("tiktok_url") // URL วิดีโอ TikTok

  // Co-Agent settings
  allowCoAgent       Boolean         @default(false) @map("allow_co_agent") // อนุญาตให้มีนายหน้าร่วม
  commissionType     CommissionType? @map("commission_type") // ประเภทค่าคอมมิชชั่น (เปอร์เซ็นต์หรือจำนวนเงิน)
  commissionPercent  Float?          @map("commission_percent") // เปอร์เซ็นต์ค่าคอมมิชชั่น
  commissionAmount   Float?          @map("commission_amount") // จำนวนเงินค่าคอมมิชชั่น
  commissionCurrency Currency        @default(THB) @map("commission_currency") // สกุลเงินค่าคอมมิชชั่น

  // Contact information
  contactName       String? @map("contact_name") // ชื่อผู้ติดต่อ
  contactPhone      String? @map("contact_phone") // เบอร์โทรหลัก
  contactPhoneAlt   String? @map("contact_phone_alt") // เบอร์โทรสำรอง
  contactEmail      String? @map("contact_email") // อีเมล
  contactLineId     String? @map("contact_line_id") // LINE ID
  contactWechatId   String? @map("contact_wechat_id") // WeChat ID
  contactWhatsapp   String? @map("contact_whatsapp") // WhatsApp
  contactFacebook   String? @map("contact_facebook") // Facebook
  contactInstagram  String? @map("contact_instagram") // Instagram
  useProfileContact Boolean @default(false) @map("use_profile_contact") // ใช้ข้อมูลติดต่อจากโปรไฟล์

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relations
  propertyId Int         @map("property_id")
  property   Property    @relation(fields: [propertyId], references: [id], onDelete: Cascade)
  userId     Int         @map("user_id") // ผู้ลงประกาศ
  user       User        @relation(fields: [userId], references: [id])
  floorPlans FloorPlan[]

  @@map("property_listings")
}

enum ListingType {
  SALE
  RENT
}

enum ListingStatus {
  DRAFT
  ACTIVE
  PENDING
  SOLD
  RENTED
  EXPIRED
  INACTIVE
}

enum Currency {
  THB
  USD
  CNY
  RUB
  GBP
  EUR
}

enum CommissionType {
  PERCENT
  FIXED_AMOUNT
}

// enum PropertyType {
//   CONDO
//   HOUSE
//   TOWNHOUSE
//   VILLA
//   LAND
//   APARTMENT
//   COMMERCIAL
//   OFFICE
//   RETAIL
//   WAREHOUSE
//   FACTORY
//   HOTEL
//   RESORT
// }

enum LandShape {
  RECTANGLE
  SQUARE
  TRIANGLE
  IRREGULAR
  L_SHAPE
}

enum LandGrade {
  FILLED
  PARTIALLY_FILLED
  UNFILLED
  SLOPED
}

enum LandAccess {
  PUBLIC_ROAD
  PRIVATE_ROAD
  ALLEY
  NO_ACCESS
}

enum OwnershipType {
  FREEHOLD
  LEASEHOLD
}

enum FurnishingType {
  UNFURNISHED
  PARTIALLY_FURNISHED
  FULLY_FURNISHED
}

// CurrencyRate model - สำหรับจัดการอัตราแลกเปลี่ยนสกุลเงิน
model CurrencyRate {
  currency  Currency @id // รหัสสกุลเงิน (ใช้ enum Currency ที่มีอยู่แล้ว)
  rate      Decimal  @db.Decimal(15, 6) // อัตราแลกเปลี่ยนเทียบกับ THB (THB = 1.0)
  name      String // ชื่อเต็มของสกุลเงิน เช่น BATH, US DOLLAR
  isBase    Boolean  @default(false) @map("is_base") // true สำหรับ THB
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("currency_rates")
}

// Icon model - สำหรับเก็บ master icon ต่างๆในระบบ
model Icon {
  id         Int                 @id @default(autoincrement())
  prefix     String // รหัสนำหน้า icon เช่น facility, property-type
  name       String? // ชื่อ icon เช่น swimming-pool, gym
  key        String? // ชื่อ icon เช่น swimming-pool, gym
  iconPath   String?             @map("icon_path") // เก็บ path ของไฟล์ SVG
  active     Boolean             @default(true) // สถานะการใช้งาน
  createdAt  DateTime            @default(now()) @map("created_at")
  updatedAt  DateTime            @updatedAt @map("updated_at")
  sub_name   String?
  facilities PropertyFacility[]
  amenities  PropertyAmenity[]
  views      PropertyView[]
  highlights PropertyHighlight[]
  labels     PropertyLabel[]
  nearbys    PropertyNearby[]

  @@unique([prefix, name])
  @@map("icons")
}

// Property Image model
model PropertyImage {
  id         Int      @id @default(autoincrement())
  url        String
  isFeatured Boolean  @default(false) @map("is_featured")
  sortOrder  Int      @default(0) @map("sort_order")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
  propertyId Int      @map("property_id")
  property   Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)

  @@map("property_images")
}

// Floor Plan model - แผนผังห้อง/ที่ดิน
model FloorPlan {
  id                Int              @id @default(autoincrement())
  url               String // URL ของรูปภาพแผนผัง
  title             String? // ชื่อแผนผัง
  description       String?          @db.Text // คำอธิบายแผนผัง
  sortOrder         Int              @default(0) @map("sort_order") // ลำดับการแสดงผล
  createdAt         DateTime         @default(now()) @map("created_at")
  updatedAt         DateTime         @updatedAt @map("updated_at")
  propertyId        Int              @map("property_id") // รหัสทรัพย์สินที่เกี่ยวข้อง
  property          Property         @relation(fields: [propertyId], references: [id], onDelete: Cascade)
  PropertyListing   PropertyListing? @relation(fields: [propertyListingId], references: [id])
  propertyListingId Int?

  @@map("floor_plans")
}

// Unit Plan model - แผนผังยูนิต (สำหรับโครงการที่มีหลายยูนิต)
model UnitPlan {
  id         Int      @id @default(autoincrement())
  url        String // URL ของรูปภาพแผนผังยูนิต
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
  sortOrder  Int      @default(0)
  propertyId Int      @map("property_id")
  property   Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)

  @@map("unit_plans")
}

// Property Feature model - คุณสมบัติพื้นฐานของทรัพย์สิน
model PropertyFeature {
  id          Int      @id @default(autoincrement())
  featureType String? // ประเภทคุณสมบัติ (เช่น Air Conditioning, Balcony, etc.)
  active      Boolean  @default(false)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  propertyId  Int      @map("property_id")
  property    Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)

  @@map("property_features")
}

// Property Amenity model - สิ่งอำนวยความสะดวกภายในที่พัก
model PropertyAmenity {
  id          Int      @id @default(autoincrement())
  amenityType String?
  active      Boolean  @default(false) // ใช้งานได้หรือไม่
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  propertyId  Int      @map("property_id")
  property    Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)
  Icon        Icon?    @relation(fields: [iconId], references: [id])
  iconId      Int?

  @@map("property_amenities")
}

// Property Facility model - สิ่งอำนวยความสะดวกของโครงการ
model PropertyFacility {
  id           Int      @id @default(autoincrement())
  facilityType String?
  active       Boolean  @default(false) // ใช้งานได้หรือไม่\
  iconId       Int?     @map("icon_id")
  Icon         Icon?    @relation(fields: [iconId], references: [id])
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  propertyId   Int      @map("property_id")
  property     Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)

  @@map("property_facilities")
}

// Property View model - วิวของทรัพย์สิน
model PropertyView {
  id         Int      @id @default(autoincrement())
  viewType   String?
  active     Boolean  @default(false) // ใช้งานได้หรือไม่
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
  propertyId Int      @map("property_id")
  property   Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)
  Icon       Icon?    @relation(fields: [iconId], references: [id])
  iconId     Int?

  @@map("property_views")
}

// Property Highlight model - จุดเด่นของทรัพย์สิน
model PropertyHighlight {
  id            Int      @id @default(autoincrement())
  highlightType String?
  active        Boolean  @default(false) // ใช้งานได้หรือไม่
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")
  propertyId    Int      @map("property_id")
  property      Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)
  Icon          Icon?    @relation(fields: [iconId], references: [id])
  iconId        Int?

  @@map("property_highlights")
}

// Property Label model - ป้ายกำกับทรัพย์สิน
model PropertyLabel {
  id         Int      @id @default(autoincrement())
  labelType  String?
  active     Boolean  @default(false) // ใช้งานได้หรือไม่
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
  propertyId Int      @map("property_id")
  property   Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)
  Icon       Icon?    @relation(fields: [iconId], references: [id])
  iconId     Int?

  @@map("property_labels")
}

// Property Nearby model - สถานที่ใกล้เคียง
model PropertyNearby {
  id         Int      @id @default(autoincrement())
  nearbyType String?
  active     Boolean  @default(false)
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
  propertyId Int      @map("property_id")
  property   Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)
  Icon       Icon?    @relation(fields: [iconId], references: [id])
  iconId     Int?

  @@map("property_nearby")
}

enum ContactStatus {
  NEW
  CONTACTED
  VISIT
  PROPOSAL
  WON
  LOST
}

// Blog model - สำหรับบทความในเว็บไซต์
model Blog {
  id        Int        @id @default(autoincrement())
  slug      String     @unique // URL slug สำหรับบทความ
  status    BlogStatus @default(DRAFT)
  viewCount Int        @default(0) @map("view_count") // จำนวนการเข้าชม

  // ข้อมูลหลายภาษา
  title              String // หัวข้อภาษาอังกฤษ (หลัก)
  content            String @db.LongText // เนื้อหาภาษาอังกฤษ (หลัก)
  translatedTitles   String? @db.LongText @map("translated_titles") // หัวข้อในหลายภาษา (JSON string format: {"th": "...", "zh": "...", "ru": "..."})
  translatedContents String? @db.LongText @map("translated_contents") // เนื้อหาในหลายภาษา (JSON string format: {"th": "...", "zh": "...", "ru": "..."})

  // ข้อมูลเพิ่มเติม
  featuredImage String? @map("featured_image") // URL รูปภาพหลัก
  category      String? // หมวดหมู่ (เก็บเป็น string แทน relation)
  tags          String? // แท็ก (เก็บเป็น string คั่นด้วย comma)

  // ข้อมูลผู้สร้างและเวลา
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  publishedAt DateTime? @map("published_at") // วันที่เผยแพร่
  userId      Int       @map("user_id") // ผู้สร้างบทความ
  user        User      @relation(fields: [userId], references: [id])

  @@map("blogs")
}


model UiString {
  id        Int    @id @default(autoincrement())
  section   String @db.VarChar(100)      // เช่น 'overview', 'header', 'footer'
  slug      String @db.VarChar(100)
  en        String @db.VarChar(255)
  th        String @db.VarChar(255)
  zhCN      String @db.VarChar(255)
  ru        String @db.VarChar(255)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // item   MenuItem[]

  @@index([section])
  @@map("ui_string")
}

model MenuItem {
  id          Int      @id @default(autoincrement())
  path        String   @unique @db.VarChar(255)   // '/buy', '/rent'
  icon        String?  @db.VarChar(64)
  sortOrder   Int      @default(0)
  active      Boolean  @default(true)
  labelSlug   String   @db.VarChar(100)
  // label       UiString @relation(fields: [labelSlug], references: [slug])

  @@index([sortOrder])
  @@map("menu_item")
}


// สถานะบทความ
enum BlogStatus {
  DRAFT // ฉบับร่าง
  PUBLISHED // เผยแพร่แล้ว
  ARCHIVED // เก็บถาวร
}
